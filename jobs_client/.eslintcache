[{"/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/index.js":"1","/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/App.js":"2","/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/pages/job/Jobs.js":"3","/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/constants/constants.js":"4","/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/components/JobContent/JobContent.js":"5","/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/components/JobSideList/JobSideList.js":"6","/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/components/FilterBox/FilterBox.js":"7"},{"size":196,"mtime":1607090608708,"results":"8","hashOfConfig":"9"},{"size":175,"mtime":1607349791259,"results":"10","hashOfConfig":"9"},{"size":1644,"mtime":1607520861433,"results":"11","hashOfConfig":"9"},{"size":175,"mtime":1607494035135,"results":"12","hashOfConfig":"9"},{"size":680,"mtime":1607521203686,"results":"13","hashOfConfig":"9"},{"size":1073,"mtime":1607345718496,"results":"14","hashOfConfig":"9"},{"size":4437,"mtime":1607521075881,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"10xlu0u",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/index.js",["35"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n",["36","37"],"/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/App.js",["38"],"import React, { useState } from \"react\";\nimport Jobs from \"./pages/job/Jobs\";\n\nconst App = () => {\n  return (\n    <div>\n      <Jobs />\n    </div>\n  );\n};\n\nexport default App;\n","/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/pages/job/Jobs.js",[],"/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/constants/constants.js",[],"/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/components/JobContent/JobContent.js",["39"],"import React, { useState } from \"react\";\nimport \"./JobContent.css\";\n\nconst JobContent = (props) => {\n  const { selectedJob } = props;\n  return (\n    <div className=\"job-detail-container\">\n      <h1>JobTitle: {selectedJob ? selectedJob[\"JobTitle\"] : null}</h1>\n      <h2>Location: {selectedJob ? selectedJob[\"Location\"] : null}</h2>\n      <h2>Employer: {selectedJob ? selectedJob[\"Employer\"] : null}</h2>\n      <h2>Job Type: {selectedJob ? selectedJob[\"JobType\"] : null}</h2>\n      <h2>Skill: {selectedJob ? selectedJob[\"Skill\"] : null}</h2>\n      <h2>Description: </h2>\n      <p>{selectedJob ? selectedJob[\"Description\"] : null}</p>\n    </div>\n  );\n};\n\nexport default JobContent;\n","/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/components/JobSideList/JobSideList.js",[],"/Users/peter/Documents/UPENN/cis550/jobs/jobs_client/src/components/FilterBox/FilterBox.js",["40"],"import React, { useState, useEffect } from \"react\";\nimport { fetchAllJobUrl } from \"../../constants/constants\";\nimport \"./FilterBox.css\";\n\nconst FilterBox = (props) => {\n  const {\n    setAllJob,\n    jobTitle,\n    setJobTitle,\n    location,\n    setLocation,\n    jobType,\n    setJobType,\n    employer,\n    setEmployer,\n    skill,\n    setSkill,\n  } = props;\n\n  const filterSearch = () => {\n    let finalQuery = \"\";\n    let jobTitleQuery = \"\";\n    let locationQuery = \"\";\n    let jobTypeQuery = \"\";\n    let employerQuery = \"\";\n    let skillQuery = \"\";\n    let baseUrl = fetchAllJobUrl + \"?\";\n    if (jobTitle) {\n      jobTitleQuery = `&jobTitle=${jobTitle}`;\n    }\n    if (location) {\n      locationQuery = `&location=${location}`;\n    }\n    if (jobType.includes(true)) {\n      if (jobType[0]) {\n        jobTypeQuery += `&jobType=\"full-time\"`;\n      }\n      if (jobType[1]) {\n        jobTypeQuery += `&jobType=\"part-time\"`;\n      }\n      if (jobType[2]) {\n        jobTypeQuery += `&jobType=\"intern\"`;\n      }\n    }\n    if (employer) {\n      employerQuery = `&employer=${employer}`;\n    }\n    if (skill) {\n      skillQuery = `&skill=${skill}`;\n    }\n\n    finalQuery =\n      baseUrl +\n      jobTitleQuery +\n      locationQuery +\n      jobTypeQuery +\n      employerQuery +\n      skillQuery;\n\n    if (finalQuery.length > baseUrl.length) {\n      finalQuery =\n        finalQuery.slice(0, baseUrl.length) +\n        finalQuery.slice(baseUrl.length + 1);\n    }\n\n    console.log(\"finalQuery\", finalQuery);\n\n    return finalQuery;\n  };\n\n  const filterFetch = async () => {\n    const filterJobData = await fetch(filterSearch()).then((res) => res.json());\n    console.log(\"filterJobData\", filterJobData);\n    // if (Array.isArray(filterJobData)) {\n    //   setAllJob(filterJobData);\n    // }\n    setAllJob(filterJobData);\n  };\n\n  useEffect(() => {\n    console.log(\"jobTitle\", jobTitle);\n  }, [jobTitle]);\n\n  useEffect(() => {\n    console.log(\"location\", location);\n  }, [location]);\n\n  useEffect(() => {\n    console.log(\"jobType\", jobType);\n  }, [jobType]);\n\n  useEffect(() => {\n    console.log(\"min\", employer);\n  }, [employer]);\n\n  useEffect(() => {\n    console.log(\"max\", skill);\n  }, [skill]);\n\n  return (\n    <div>\n      <div className=\"job-search-container\">\n        <div>\n          <input\n            className=\"job-title-input-box\"\n            type=\"text\"\n            placeholder=\"Search Job Title\"\n            onChange={(e) => {\n              setJobTitle(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"filter-box-container\">\n        <div className=\"location-input\">\n          <div>Location: </div>\n          <input\n            type=\"text\"\n            onChange={(e) => {\n              setLocation(e.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"employer-input\">\n          <div>Employer: </div>\n          <input\n            type=\"text\"\n            onChange={(e) => {\n              setEmployer(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"skill-input\">\n          <div>Skill: </div>\n          <input\n            type=\"text\"\n            onChange={(e) => {\n              setSkill(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"job-input\">\n          <div>Job type: </div>\n          <div className=\"job-type-input\">\n            <div>\n              <input\n                type=\"checkbox\"\n                onChange={() =>\n                  setJobType([!jobType[0], jobType[1], jobType[2]])\n                }\n              />\n              <label>full-time</label>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                onChange={() =>\n                  setJobType([jobType[0], !jobType[1], jobType[2]])\n                }\n              />\n              <label>part-time</label>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                onChange={() =>\n                  setJobType([jobType[0], jobType[1], !jobType[2]])\n                }\n              />\n              <label>intern</label>\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"submit-button\"\n          onClick={() => {\n            filterFetch();\n            console.log(\"submitted\");\n          }}\n        >\n          Submit\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterBox;\n",{"ruleId":"41","severity":1,"message":"42","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":23},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"41","severity":1,"message":"49","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"49","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"49","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["50"],"no-negated-in-lhs",["51"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]